body {
    width: 100vw;
    height: 100vh;
    background-color: #ffffff;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1600 900'%3E%3Cdefs%3E%3ClinearGradient id='a' x1='0' x2='0' y1='1' y2='0'%3E%3Cstop offset='0' stop-color='%230FF'/%3E%3Cstop offset='1' stop-color='%23CF6'/%3E%3C/linearGradient%3E%3ClinearGradient id='b' x1='0' x2='0' y1='0' y2='1'%3E%3Cstop offset='0' stop-color='%23F00'/%3E%3Cstop offset='1' stop-color='%23FC0'/%3E%3C/linearGradient%3E%3C/defs%3E%3Cg fill='%23FFF' fill-opacity='0' stroke-miterlimit='10'%3E%3Cg stroke='url(%23a)' stroke-width='2'%3E%3Cpath transform='translate(0 0)' d='M1409 581 1450.35 511 1490 581z'/%3E%3Ccircle stroke-width='4' transform='rotate(0 800 450)' cx='500' cy='100' r='40'/%3E%3Cpath transform='translate(0 0)' d='M400.86 735.5h-83.73c0-23.12 18.74-41.87 41.87-41.87S400.86 712.38 400.86 735.5z'/%3E%3C/g%3E%3Cg stroke='url(%23b)' stroke-width='4'%3E%3Cpath transform='translate(0 0)' d='M149.8 345.2 118.4 389.8 149.8 434.4 181.2 389.8z'/%3E%3Crect stroke-width='8' transform='rotate(0 1089 759)' x='1039' y='709' width='100' height='100'/%3E%3Cpath transform='rotate(0 1400 132)' d='M1426.8 132.4 1405.7 168.8 1363.7 168.8 1342.7 132.4 1363.7 96 1405.7 96z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
    background-attachment: fixed;
    background-size: cover;
  }
  .floatingButtonWrap {
      display: block;
      position: fixed;
      bottom: 45px;
      right: 45px;
      z-index: 999999999;
  }
  
  .floatingButtonInner {
      position: relative;
  }
  
  .floatingButton {
      display: block;
      width: 60px;
      height: 60px;
      text-align: center;
      background: -webkit-linear-gradient(45deg, #8769a9, #507cb3);
      background: -o-linear-gradient(45deg, #8769a9, #507cb3);
      background: linear-gradient(45deg, #8769a9, #507cb3);
      color: #fff;
      line-height: 50px;
      position: absolute;
      border-radius: 50% 50%;
      bottom: 0px;
      right: 0px;
      border: 5px solid #b2bedc;
      /* opacity: 0.3; */
      opacity: 1;
      transition: all 0.4s;
  }
  
  .floatingButton .fa {
      font-size: 15px !important;
  }
  
  .floatingButton.open,
  .floatingButton:hover,
  .floatingButton:focus,
  .floatingButton:active {
      opacity: 1;
      color: #fff;
  }
  
  
  .floatingButton .fa {
      transform: rotate(0deg);
      transition: all 0.4s;
  }
  
  .floatingButton.open .fa {
      transform: rotate(270deg);
  }
  
  .floatingMenu {
      position: absolute;
      bottom: 60px;
      right: 0px;
      /* width: 200px; */
      display: none;
  }
  
  .floatingMenu li {
      width: 100%;
      float: right;
      list-style: none;
      text-align: right;
      margin-bottom: 5px;
  }
  
  .floatingMenu li a {
      padding: 8px 15px;
      display: inline-block;
      background: #ccd7f5;
      color: #6077b0;
      border-radius: 5px;
      overflow: hidden;
      white-space: nowrap;
      transition: all 0.4s;
      /* -webkit-box-shadow: 1px 3px 5px rgba(0, 0, 0, 0.22);
      box-shadow: 1px 3px 5px rgba(0, 0, 0, 0.22); */
      -webkit-box-shadow: 1px 3px 5px rgba(211, 224, 255, 0.5);
      box-shadow: 1px 3px 5px rgba(211, 224, 255, 0.5);
  }
  
  .floatingMenu li a:hover {
      margin-right: 10px;
      text-decoration: none;
  }
 




  .label-before, .field input:focus + label::before, .field input:valid + label::before {
    line-height: 20px;
    font-size: 12px;
    top: -10px;
    background: #fff;
    padding: 0 6px;
    left: 9px;
  }
  

  
  .field {
    position: relative;
    margin-bottom: 15px;
  }
  .field label::before {
    content: attr(title);
    position: absolute;
    top: 0;
    left: 15px;
    line-height: 40px;
    font-size: 14px;
    color: #777;
    transition: 300ms all;
  }
  .field input {
    width: 100%;
    line-height: 40px;
    padding: 0 15px;
    box-sizing: border-box;
    font-size: 14px;
    color: #222;
    border: 1px solid #ccc;
    border-radius: 3px;
  }
  .field input:focus {
    outline: 0;
    border-color: blue;
  }
  .field input:valid + label::before {
    content: attr(data-title);
  }
  .field input:focus + label::before {
    color: blue;
  }